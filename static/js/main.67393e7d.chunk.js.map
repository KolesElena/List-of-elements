{"version":3,"sources":["components/app-header/app-header.styled.js","components/app-header/app-header.js","components/todo-list-item/todo-list-item.styled.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.styled.js","components/todo-list/todo-list.js","components/item-add-form/item-add-form.styled.js","components/item-add-form/item-add-form.js","components/app/app.styled.js","components/app/app.js","index.js"],"names":["Header","styled","h1","AppHeader","ButtonStyled","button","props","important","LabelStyled","span","TodoListItem","useState","label","text","setText","className","editing","type","value","onChange","e","target","onClick","onToggleImportant","data-testid","onToggleChange","onDeleted","ListStyled","ul","ListItemStyled","li","TodoList","todoData","elements","map","item","id","ItemAddFormStyled","form","ItemAddForm","onAdded","newLabel","state","setState","onSubmit","preventDefault","placeholder","AppStyled","div","App","maxId","createTodoItem","done","term","newItems","idx","findIndex","el","slice","newItem","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.67393e7d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Header = styled.h1`\n\ttext-align: center;\n`;","import React from \"react\";\nimport { Header } from \"./app-header.styled.js\";\n\nconst AppHeader = () => {\n  return <Header> Todo List </Header>\n};\n\nexport default AppHeader;","import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n\tfont-weight: ${props => props.important ? \"bold\" : \"normal\"};\n\tcolor: ${props => props.important ? \"steelblue\" : \"black\"};\n\twidth: 35px;\n\tmargin: 3px;\n`;\n\nexport const LabelStyled = styled.span`\n\tfont-weight: ${props => props.important ? \"bold\" : \"normal\"};\n\tcolor: ${props => props.important ? \"steelblue\" : \"black\"};\n\tmargin-left: 1.25rem;\n\tline-height: 35px;\n\tcursor: pointer;\n\tuser-select: none;\n`;","import React, { useState } from \"react\";\nimport { LabelStyled, ButtonStyled } from './todo-list-item.styled';\n\nconst TodoListItem = (props) => {\n  const [text, setText] = useState(props.label)\n\n  const onEdit = (e) => setText(e.target.value);\n\n    return (\n      <span className=\"todo-list-item\">\n        {props.editing\n          ? <input type=\"text\" value={text} onChange={onEdit} />\n          : <LabelStyled important={props.important}>{props.label}</LabelStyled>\n        }\n        <ButtonStyled important={props.important} className=\"btn btn-outline-info btn-sm float-right\" onClick={props.onToggleImportant}>\n        <i className=\"fa fa-exclamation\" />\n        </ButtonStyled>\n        <ButtonStyled data-testid=\"edit\" important={props.important} type=\"button\" className=\"btn btn-outline-secondary btn-sm float-right\" onClick={() => props.onToggleChange(text)}>\n          {props.editing\n            ? <i className=\"fa fa-check\" />\n            : <i className=\"fa fa-edit\" />\n        }\n        </ButtonStyled>\n        <ButtonStyled important={props.important} type=\"button\" className=\"btn btn-outline-danger btn-sm float-right\" onClick={props.onDeleted}>\n        <i className=\"fa fa-trash-o\" /></ButtonStyled>\n      </span>\n    );\n}\n\nexport default TodoListItem;\n","import styled from 'styled-components';\n\nexport const ListStyled = styled.ul`\n\tpadding-left: 0;\n\tborder-color: #ced4da;\n`;\n\nexport const ListItemStyled = styled.li`\n  padding: .25rem .75rem;\n  border: 1px solid #ced4da;\n  list-style: none;\n  margin-bottom: -1px;\n\n  :first-child {\n    border-top-left-radius: .25rem;\n    border-top-right-radius: .25rem;\n  }\n\n  :last-child {\n    border-bottom-left-radius: .25rem;\n    border-bottom-right-radius: .25rem;\n  }\n`;","import React from \"react\";\nimport TodoListItem from \"../todo-list-item/todo-list-item\";\nimport { ListStyled, ListItemStyled } from \"./todo-list.styled\";\n\nconst TodoList =({todoData, onDeleted, onToggleImportant, onToggleChange}) => {\n\tconst elements=todoData.map((item) => {\n\t\tconst {id, ...props}=item;\n\t\t\n\t\treturn (\n\t\t\t<ListItemStyled key={item.id}><TodoListItem {...props} onToggleChange={(text) => onToggleChange(id, text)} onDeleted={()=>onDeleted(id)}\n\t\t\tonToggleImportant={()=>onToggleImportant(id)}/></ListItemStyled>\n\t\t);\n\t});\n\n\treturn (\n\t\t<ListStyled>\n\t\t\t{elements}\n\t\t</ListStyled>\n\t);\n};\n\t\t\nexport default TodoList;\n\t\t","import styled from 'styled-components';\n\nexport const ItemAddFormStyled = styled.form`\n\tdisplay: flex;\n\tmargin-top: 10px;\n`;\n\nexport const ButtonStyled = styled.button`\n\tborder: 1px solid #ced4da;\n`;","import React, { useState } from \"react\";\nimport { ItemAddFormStyled, ButtonStyled } from \"./item-add-form.styled.js\";\n\nconst ItemAddForm = ({onAdded}) => {\n\t\n\tconst [ state, setState ] = useState({newLabel: ''});\n\t\n\tconst onChangeInput =(e) => {\n\t\tsetState({\n\t\t\tnewLabel: e.target.value\n\t\t});\n\t};\n\t\n\tconst onSubmitFunc  =(e) => {\n\t\te.preventDefault();\n\t\tonAdded(state.newLabel);\n\t\tsetState({newLabel: ''})\n\t};\n\t\n\treturn (\n\t\t<ItemAddFormStyled onSubmit={onSubmitFunc}>\n\t\t\t<input type=\"text\" placeholder=\"What needs to be done\" className=\"form-control mr-2\" onChange={onChangeInput} value={state.newLabel} />\n\t\t\t<ButtonStyled className=\"btn btn-outline-secondary\">Add Item</ButtonStyled>\n\t\t</ItemAddFormStyled>\n\t\t);\n\t};\n\t\n\texport default ItemAddForm;\n\t\n\t","import styled from 'styled-components';\n\nexport const AppStyled = styled.div `\n\tmargin: 2rem auto 0 auto;\n\tmax-width: 400px;\n`;","import React, { useState } from \"react\";\nimport AppHeader from \"../app-header/app-header\";\nimport TodoList from \"../todo-list/todo-list\";\nimport ItemAddForm from \"../item-add-form/item-add-form\";\nimport { AppStyled } from './app.styled';\n\nconst App = () => {\n\t\n\tlet maxId = 100;\n\t\n\tconst createTodoItem = (label) => {\n\t\treturn {\n\t\t\tlabel,\n\t\t\timportant: false,\n\t\t\tediting: false,\n\t\t\tdone: false,\n\t\t\tid: maxId++\n\t\t}\n\t};\n\t\n\tconst [state, setState] = useState({\n\t\ttodoData: [\n\t\t\tcreateTodoItem(\"Fill out a tax return\"),\n\t\t\tcreateTodoItem(\"Build an App\"),\n\t\t\tcreateTodoItem(\"Clean the apartment\")\n\t\t],\n\t\tterm: \"\"\n\t});\n\t\n\tconst ToggleChanged = (id, label) => {\n\t\tconst newItems = state.todoData.map((item) => {\n\t\t\tif (item.id === id) {\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\tediting: !item.editing,\n\t\t\t\t\tlabel\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn item;\n\t\t});\n\t\t\n\t\tsetState({\n\t\t\t...state,\n\t\t\ttodoData: newItems\n\t\t});\n\t};\n\t\n\tconst ToggleImportant = (id) => {\n\t\tconst newItems = state.todoData.map((item) => {\n\t\t\tif (item.id === id) {\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\timportant: !item.important\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn item;\n\t\t});\n\t\t\n\t\tsetState({\n\t\t\t...state,\n\t\t\ttodoData: newItems\n\t\t});\n\t};\n\t\n\tconst deleteItem = (id) => {\n\t\tsetState(({todoData}) => {\n\t\t\tconst idx = todoData.findIndex((el) => el.id === id);\n\t\t\tconst newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n\t\t\treturn {\n\t\t\t\ttodoData: newArray\n\t\t\t}\n\t\t});\n\t};\n\t\n\t\n\tconst addItem = (text) => {\n\t\tconst newItem = createTodoItem(text);\n\t\t\n\t\tsetState(({todoData}) => {\n\t\t\tconst newArr = [...todoData, newItem];\n\t\t\treturn {\n\t\t\t\ttodoData: newArr\n\t\t\t}\n\t\t});\n\t};\n\t\n\tconst { todoData } = state;\n\t\n\treturn ( \n\t\t<AppStyled >\n\t\t\t<AppHeader / >\n\t\t\t<TodoList todoData = {todoData}\n\t\t\tonToggleImportant = { ToggleImportant }\n\t\t\tonToggleChange = { ToggleChanged }\n\t\t\tonDeleted = { deleteItem } /> \n\t\t\t<ItemAddForm onAdded = { addItem } /> \n\t\t</AppStyled>\n\t\t);\n};\n\t\nexport default App;","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./components/app/app\";\n\nReactDom.render(<App/>, document.getElementById(\"root\"));\n"],"sourceRoot":""}