{"version":3,"sources":["components/app-header/app-header.styled.js","components/app-header/app-header.js","components/todo-list-item/todo-list-item.styled.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.styled.js","components/todo-list/todo-list.js","components/item-add-form/item-add-form.styled.js","components/item-add-form/item-add-form.js","styles/breakpoints.js","components/app/app.styled.js","components/app/app.js","index.js"],"names":["Header","styled","h1","AppHeader","ListItemStyled","span","ButtonsStyled","div","ButtonStyled","button","props","important","LabelStyled","TodoListItem","label","editing","onDeleted","onToggleChange","onToggleImportant","useState","text","setText","type","value","onChange","e","target","data-testid","className","onClick","ListStyled","ul","li","TodoList","todoData","elements","map","item","index","ItemAddFormStyled","form","ErrorStyled","Flex","ItemAddForm","onAdded","newLabel","state","setState","hasError","setHasError","onSubmit","preventDefault","placeholder","tablet","AppStyled","desktopStartWidth","App","createTodoItem","itemIndex","newItems","idx","findIndex","el","slice","newItem","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.b068b984.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Header = styled.h1`\n\ttext-align: center;\n`;","import React from \"react\";\nimport { Header } from \"./app-header.styled.js\";\n\nconst AppHeader = () => {\n  return <Header> Todo List </Header>\n};\n\nexport default AppHeader;","import styled from 'styled-components';\n\nexport const ListItemStyled = styled.span`\n\tposition: relative;\n\tdisplay: flex;\n`;\n\nexport const ButtonsStyled = styled.div`\n\tposition: absolute;\n\tright: 1%;\n`;\n\nexport const ButtonStyled = styled.button`\n\tfont-weight: ${props => props.important ? \"bold\" : \"normal\"};\n\tcolor: ${props => props.important ? \"steelblue\" : \"black\"};\n\twidth: 35px;\n\tmargin: 3px;\n`;\n\nexport const LabelStyled = styled.span`\n\tfont-weight: ${props => props.important ? \"bold\" : \"normal\"};\n\tcolor: ${props => props.important ? \"steelblue\" : \"black\"};\n\tmargin-left: 0;\n\tline-height: 35px;\n\tcursor: pointer;\n\tuser-select: none;\n`;","import React, { useState } from \"react\";\nimport { LabelStyled, ButtonStyled, ListItemStyled, ButtonsStyled } from './todo-list-item.styled';\n\nconst TodoListItem = ({label, important, editing, onDeleted, onToggleChange, onToggleImportant}) => {\n  \n  const [text, setText] = useState(label)\n\n  const onEdit = (e) => setText(e.target.value);\n\n    return (\n      <ListItemStyled>\n        {editing\n          ? <input type=\"text\" value={text} onChange={onEdit} />\n          : <LabelStyled important={important}>{label}</LabelStyled>\n        }\n        <ButtonsStyled>\n          <ButtonStyled data-testid=\"important\" important={important} className=\"btn btn-outline-info btn-sm\" onClick={onToggleImportant}>\n          <i className=\"fa fa-exclamation\" />\n          </ButtonStyled>\n          <ButtonStyled data-testid=\"edit\" important={important} type=\"button\" className=\"btn btn-outline-secondary btn-sm\" onClick={() => {onToggleChange(text)}}>\n            {editing\n              ? <i className=\"fa fa-check\" />\n              : <i className=\"fa fa-edit\" />\n          }\n          </ButtonStyled>\n          <ButtonStyled data-testid=\"delete\" important={important} type=\"button\" className=\"btn btn-outline-danger btn-sm\" onClick={onDeleted}>\n          <i className=\"fa fa-trash-o\" /></ButtonStyled>\n        </ButtonsStyled>\n      </ListItemStyled>\n    );\n}\n\nexport default TodoListItem;\n","import styled from 'styled-components';\n\nexport const ListStyled = styled.ul`\n\tpadding-left: 0;\n\tborder-color: #ced4da;\n`;\n\nexport const ListItemStyled = styled.li`\n  padding: .25rem .75rem;\n  border: 1px solid #ced4da;\n  list-style: none;\n  margin-bottom: -1px;\n\n  :first-child {\n    border-top-left-radius: .25rem;\n    border-top-right-radius: .25rem;\n  }\n\n  :last-child {\n    border-bottom-left-radius: .25rem;\n    border-bottom-right-radius: .25rem;\n  }\n`;","import React from \"react\";\nimport TodoListItem from \"../todo-list-item/todo-list-item\";\nimport { ListStyled, ListItemStyled } from \"./todo-list.styled\";\n\nconst TodoList =({todoData, onDeleted, onToggleImportant, onToggleChange}) => {\n\tconst elements=todoData.map((item, index) => {\n\t\t\n\t\treturn (\n\t\t\t<ListItemStyled key={index}><TodoListItem {...item} onToggleChange={(text) => onToggleChange(index, text)} onDeleted={()=>onDeleted(index)}\n\t\t\tonToggleImportant={()=>onToggleImportant(index)}/></ListItemStyled>\n\t\t);\n\t});\n\n\treturn (\n\t\t<ListStyled>\n\t\t\t{elements}\n\t\t</ListStyled>\n\t);\n};\n\t\t\nexport default TodoList;\n\t\t","import styled from 'styled-components';\n\nexport const ItemAddFormStyled = styled.form`\n\tmargin-top: 10px;\n`;\n\nexport const ButtonStyled = styled.button`\n\tborder: 1px solid #ced4da;\n`;\n\nexport const ErrorStyled = styled.div`\n\tcolor: red;\n\tpadding: .25rem .75rem; \n`;\n\nexport const Flex = styled.div`\n\tdisplay: flex;\n`;\n","import React, { useState } from \"react\";\nimport { ItemAddFormStyled, ButtonStyled, ErrorStyled, Flex } from \"./item-add-form.styled.js\";\n\nconst ItemAddForm = ({ onAdded }) => {\n    \n    const [state, setState] = useState({newLabel: ''});\n    const [hasError, setHasError] = useState(false);\n\n    const onChangeInput = (e) => {\n        setHasError(false);\n        setState({\n            newLabel: e.target.value\n        });\n    };\n    \n    const onSubmitFunc = (e) => {\n        e.preventDefault();\n        if(state.newLabel) {\n            onAdded(state.newLabel);\n            setState({newLabel: ''})\n        } else {\n            setHasError(true);\n        }\n    };\n    \n    return (\n        <ItemAddFormStyled data-testid=\"form\" onSubmit={onSubmitFunc}>\n\t\t\t<Flex>\n\t\t\t\t<input type=\"text\" placeholder=\"What needs to be done\" className=\"form-control mr-2\"\n\t\t\t\tonChange={onChangeInput} value={state.newLabel} />\n\t\t\t\t<ButtonStyled className=\"btn btn-outline-secondary\">Add Item</ButtonStyled>\n\t\t\t</Flex>\n            {hasError && <ErrorStyled>This field is required!</ErrorStyled>}\n        </ItemAddFormStyled>\n        );\n    };\n    \n    export default ItemAddForm;\n","export const mobileStartWidth = 480;\nexport const tabletStartWidth = 768;\nexport const desktopStartWidth = 1024;\nexport const largeDesktopWidth = 1440;\nexport const tabletEndWidth = desktopStartWidth;\nexport const xDesktopStartWidth = 1200;\nexport const xxDesktopStartWidth = 1440;\n\nexport const mobileOnly = `@media (max-width: ${tabletStartWidth}px)`;\n\nexport const mobile = `@media (min-width: ${mobileStartWidth}px)`;\n\nexport const tablet = `@media (min-width: ${tabletStartWidth}px)`;\n\nexport const desktop = `@media (min-width: ${tabletEndWidth}px)`;\n\nexport const desktopStart = `@media (min-width: ${desktopStartWidth + 1}px)`;\n\nexport const xDesktop = `@media (min-width: ${xDesktopStartWidth}px)`;\n\nexport const xxDesktop = `@media (min-width: ${xxDesktopStartWidth}px)`;\n","import styled from 'styled-components';\nimport { tablet } from '../../styles/breakpoints';\n\nexport const AppStyled = styled.div `\n\tmargin: 2rem .6rem;\n\n\t${tablet} {\n\t\tmargin: 2rem auto 0 auto;\n\t\tmax-width: 400px;\n\t}\n`;","import React, { useState } from \"react\";\nimport AppHeader from \"../app-header/app-header\";\nimport TodoList from \"../todo-list/todo-list\";\nimport ItemAddForm from \"../item-add-form/item-add-form\";\nimport { AppStyled } from './app.styled';\n\nconst App = () => {\n\tconst createTodoItem = (label) => {\n\t\treturn {\n\t\t\tlabel,\n\t\t\timportant: false,\n\t\t\tediting: false,\n\t\t}\n\t};\n\t\n\tconst [state, setState] = useState({\n\t\ttodoData: [\n\t\t\tcreateTodoItem(\"Fill out a tax return\"),\n\t\t\tcreateTodoItem(\"Build an App\"),\n\t\t\tcreateTodoItem(\"Clean the apartment\")\n\t\t]\n\t});\n\t\n\tconst ToggleChanged = (itemIndex, label) => {\n\t\tconst newItems = state.todoData.map((item, index) => {\n\t\t\tif (index === itemIndex) {\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\tediting: !item.editing,\n\t\t\t\t\tlabel\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn item;\n\t\t});\n\t\t\n\t\tsetState({\n\t\t\ttodoData: newItems\n\t\t});\n\t};\n\t\n\tconst ToggleImportant = (itemIndex) => {\n\t\tconst newItems = state.todoData.map((item, index) => {\n\t\t\tif (itemIndex === index) {\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\timportant: !item.important\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn item;\n\t\t});\n\t\t\n\t\tsetState({\n\t\t\ttodoData: newItems\n\t\t});\n\t};\n\t\n\tconst deleteItem = (itemIndex) => {\n\t\tsetState(({todoData}) => {\n\t\t\tconst idx = todoData.findIndex((el, index) => itemIndex === index);\n\t\t\tconst newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n\t\t\treturn {\n\t\t\t\ttodoData: newArray\n\t\t\t}\n\t\t});\n\t};\n\n\tconst addItem = (text) => {\n\t\tconst newItem = createTodoItem(text);\n\t\t\n\t\tsetState(({todoData}) => {\n\t\t\tconst newArr = [...todoData, newItem];\n\t\t\treturn {\n\t\t\t\ttodoData: newArr\n\t\t\t}\n\t\t});\n\t};\n\t\n\treturn ( \n\t\t<AppStyled >\n\t\t\t<AppHeader />\n\t\t\t<TodoList todoData = {state.todoData}\n\t\t\t\tonToggleImportant = { ToggleImportant }\n\t\t\t\tonToggleChange = { ToggleChanged }\n\t\t\t\tonDeleted = { deleteItem }\n\t\t\t/> \n\t\t\t<ItemAddForm onAdded = { addItem }/> \n\t\t</AppStyled>\n\t\t);\n};\n\t\nexport default App;","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./components/app/app\";\n\nReactDom.render(<App/>, document.getElementById(\"root\"));\n"],"sourceRoot":""}